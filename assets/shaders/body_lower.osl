float pointInRect(
    float x,
    float y,
    float xCenter,
    float yCenter,
    float xWidth,
    float yWidth,
    float fuzz
)
{
    float minX = xCenter - xWidth / 2;
    float maxX = xCenter + xWidth / 2;

    float minY = yCenter - yWidth / 2;
    float maxY = yCenter + yWidth / 2;

    return smoothstep(minX, minY + fuzz, x) *
           (1 - smoothstep(maxX, maxX + fuzz, x)) *
           smoothstep(minY, minY + fuzz, y) *
           (1 - smoothstep(maxY, maxY + fuzz, y));
}

shader dashLines(
    color surfaceColor = color(0, 0, 0),
    color dashColor = color(1, 1, 1),

    float sWidth = 0.7,
    float tWidth = 0.2,
    float sRepeat = 12,
    float tRepeat = 3,

    float sCenter = 0.5,
    float tCenter = 0.5,

    float fuzz = 0.0,
    float s = 0 [[int lockgeom = 0]],
    float t = 0 [[int lockgeom = 0]],

    output color outColor = 0
)
{
    float ss = mod(s * sRepeat, 1);
    float tt = mod(t * tRepeat, 1);

    float blend = pointInRect(ss, tt, sCenter, tCenter, sWidth, tWidth, fuzz);

    outColor = mix(surfaceColor, dashColor, blend);
}